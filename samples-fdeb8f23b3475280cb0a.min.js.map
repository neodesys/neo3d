{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"window.neo3d\"","webpack:///./src/samples/index.js","webpack:///./src/samples/disfract/index.js","webpack:///./src/samples/disfract/FractalShader.js","webpack:///./src/samples/disfract/fractal.vert","webpack:///./src/samples/disfract/fractal.frag"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","neo3d","disfract","addEventListener","main","_fractalShader","_fullscreenPlane","PlaneMesh","_renderer","_center","_scale","_aspectRatio","onInitContext","gl","bContextLost","clearColor","init","onSurfaceResized","width","height","viewport","this","onDrawFrame","size","clear","COLOR_BUFFER_BIT","setPos","setSize","drawMesh","drawSurfaceId","div","document","createElement","style","marginBottom","innerHTML","drawSurf","getElementById","parentNode","insertBefore","switchDrawingButton","fpsSpan","showFPS","innerText","getFPS","toFixed","setTimeout","createRenderingSurface","startDrawing","button","isDrawing","stopDrawing","alert","_fractalShaderSrc","vert","frag","FractalShader","Shader","_pos","Vec2","_size","_attribLoc","vtxPosition","_uniformLoc","pos","constructor","_initShaderLocations","_gl","getAttribLocation","_prog","getUniformLocation","_bindShader","enableVertexAttribArray","uniform2fv","buffer","_unbindShader","disableVertexAttribArray","_bindMeshAttribs","mesh","bindAttribBuffer","Mesh","ATTRIB_TYPE","VERTEX","x","y","setFromValues","isBound","w","h"],"mappings":"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","file":"samples-fdeb8f23b3475280cb0a.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = window.neo3d;","/**\n * Neo3D Samples\n *\n * Copyright (C) 2015, Loïc Le Page\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar disfract = require(\"./disfract\");\n\nwindow.addEventListener(\"load\", function()\n{\n    disfract.main(\"disfractDrawSurf\");\n});\n","/**\n * Disfract\n *\n * Copyright (C) 2015, Loïc Le Page\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar neo3d = require(\"neo3d\");\nvar FractalShader = require(\"./FractalShader\");\n\nfunction _switchDrawingState(button)\n{\n    if (neo3d.isDrawing())\n    {\n        neo3d.stopDrawing();\n        button.value = \"Start\";\n    }\n    else\n    {\n        neo3d.startDrawing();\n        button.value = \"Stop\";\n    }\n}\n\nvar _fractalShader = new FractalShader();\nvar _fullscreenPlane = new neo3d.PlaneMesh();\n\n//TODO: implement user interactions\nvar _renderer = {\n    _center: [-0.1528, 1.0397],\n\n    _scale: 1.0,\n\n    _aspectRatio: 1.0,\n\n    onInitContext: function(gl, bContextLost)\n    {\n        gl.clearColor(0, 0, 0, 1);\n        _fractalShader.init(gl, bContextLost);\n        _fullscreenPlane.init(gl, bContextLost);\n        _fractalShader.bind();\n    },\n\n    onSurfaceResized: function(gl, width, height)\n    {\n        gl.viewport(0, 0, width, height);\n        this._aspectRatio = width / height;\n    },\n\n    onDrawFrame: function(gl)\n    {\n        this._scale += 0.005 * this._scale;\n        if (this._scale > 200000.0)\n        {\n            this._scale = 1.0;\n        }\n\n        var size = [4.0, 4.0];\n        if (this._scale > 0.0)\n        {\n            var s = 1.0 / this._scale;\n            size[0] *= s;\n            size[1] *= s;\n        }\n\n        if (this._aspectRatio >= 1.0)\n        {\n            size[0] *= this._aspectRatio;\n        }\n        else if (this._aspectRatio > 0.0)\n        {\n            size[1] /= this._aspectRatio;\n        }\n\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        _fractalShader.setPos(this._center[0], this._center[1]);\n        _fractalShader.setSize(size[0], size[1]);\n        _fractalShader.drawMesh(_fullscreenPlane);\n    }\n};\n\nmodule.exports = {\n    main: function(drawSurfaceId)\n    {\n        var div = document.createElement(\"div\");\n        div.style.marginBottom = \"20px\";\n        div.innerHTML = '<input type=\"button\" id=\"switchDrawingButton\" value=\"Stop\" style=\"cursor: pointer;\">&nbsp;<span id=\"fpsSpan\"></input>';\n\n        var drawSurf = document.getElementById(drawSurfaceId);\n        drawSurf.parentNode.insertBefore(div, drawSurf);\n\n        var switchDrawingButton = document.getElementById(\"switchDrawingButton\");\n        var fpsSpan = document.getElementById(\"fpsSpan\");\n\n        var showFPS = function()\n        {\n            fpsSpan.innerText = neo3d.getFPS().toFixed(3) + \" fps\";\n            setTimeout(showFPS, 1000);\n        };\n        showFPS();\n\n        var rdrSurf = neo3d.createRenderingSurface(drawSurf, _renderer, true);\n        if (rdrSurf)\n        {\n            neo3d.startDrawing();\n            switchDrawingButton.addEventListener(\"click\", function()\n            {\n                _switchDrawingState(switchDrawingButton);\n            });\n        }\n        else\n        {\n            window.alert(\"WebGL is not available\");\n        }\n    }\n};\n","/**\n * Disfract\n *\n * Copyright (C) 2015, Loïc Le Page\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar neo3d = require(\"neo3d\");\n\nvar _fractalShaderSrc = {\n    vert: require(\"./fractal.vert\"),\n    frag: require(\"./fractal.frag\")\n};\n\nvar FractalShader = module.exports = function()\n{\n    neo3d.Shader.call(this, _fractalShaderSrc.vert, _fractalShaderSrc.frag);\n\n    this._pos = new neo3d.Vec2();\n    this._size = new neo3d.Vec2();\n\n    this._attribLoc = {\n        vtxPosition: -1\n    };\n\n    this._uniformLoc = {\n        pos: -1,\n        size: -1\n    };\n};\n\nFractalShader.prototype = Object.create(neo3d.Shader.prototype);\nFractalShader.prototype.constructor = FractalShader;\n\nFractalShader.prototype._initShaderLocations = function()\n{\n    this._attribLoc.vtxPosition = this._gl.getAttribLocation(this._prog, \"aVtxPosition\");\n\n    this._uniformLoc.pos = this._gl.getUniformLocation(this._prog, \"uPos\");\n    this._uniformLoc.size = this._gl.getUniformLocation(this._prog, \"uSize\");\n};\n\nFractalShader.prototype._bindShader = function()\n{\n    this._gl.enableVertexAttribArray(this._attribLoc.vtxPosition);\n\n    this._gl.uniform2fv(this._uniformLoc.pos, this._pos.buffer);\n    this._gl.uniform2fv(this._uniformLoc.size, this._size.buffer);\n\n    return true;\n};\n\nFractalShader.prototype._unbindShader = function()\n{\n    this._gl.disableVertexAttribArray(this._attribLoc.vtxPosition);\n};\n\nFractalShader.prototype._bindMeshAttribs = function(mesh)\n{\n    return mesh.bindAttribBuffer(this._attribLoc.vtxPosition, neo3d.Mesh.ATTRIB_TYPE.VERTEX);\n};\n\nFractalShader.prototype.setPos = function(x, y)\n{\n    this._pos.setFromValues(x, y);\n\n    if (this.isBound())\n    {\n        this._gl.uniform2fv(this._uniformLoc.pos, this._pos.buffer);\n    }\n};\n\nFractalShader.prototype.setSize = function(w, h)\n{\n    this._size.setFromValues(w, h);\n\n    if (this.isBound())\n    {\n        this._gl.uniform2fv(this._uniformLoc.size, this._size.buffer);\n    }\n};\n","module.exports = \"attribute vec3 aVtxPosition;\\n\\nuniform vec2 uPos;\\nuniform vec2 uSize;\\n\\nvarying highp vec2 z0;\\n\\nvoid main()\\n{\\n    gl_Position = vec4(aVtxPosition, 1.0);\\n    z0 = uPos + aVtxPosition.xy * uSize * 0.5;\\n}\\n\"","module.exports = \"precision highp float;\\n\\nvarying highp vec2 z0;\\n\\nconst int MAX_ITER = 1500;\\n\\nvoid main()\\n{\\n    vec2 zn = z0;\\n    float q = 0.0;\\n\\n    for (int i = 0; i < MAX_ITER; ++i)\\n    {\\n        float f = zn.x;\\n        zn.x = f * f - zn.y * zn.y + z0.x;\\n        zn.y = 2.0 * f * zn.y + z0.y;\\n\\n        f = zn.x * zn.x + zn.y * zn.y;\\n        if (f >= 4.0)\\n        {\\n            q = float(i + 1);\\n            break;\\n        }\\n    }\\n\\n    vec3 color = vec3(0.0);\\n    if (q > 0.0)\\n    {\\n        color = mix(vec3(0.0, 0.0, 0.0), vec3(0.6, 0.9, 1.0), fract(0.008 * q));\\n    }\\n\\n    gl_FragColor = vec4(color, 1.0);\\n}\\n\""],"sourceRoot":""}